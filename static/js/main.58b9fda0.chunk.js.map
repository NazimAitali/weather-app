{"version":3,"sources":["redux/reducers/city.js","redux/reducers/index.js","redux/store/index.js","components/navBar/index.js","components/card/index.js","components/content/weatherCard/index.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","city","name","coordonate","cityReducer","state","action","type","payload","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Search","Input","Navbar","updateCity","getWeather","className","placeholder","onChange","e","target","value","onSearch","Cards","loading","error","data","location","moment","format","current","humidity","precip_mm","wind_kph","wind_dir","pressure_mb","src","condition","icon","alt","temp_c","text","forecast","forecastday","map","i","index","day","date","maxtemp_c","Math","round","Content","useState","setCity","Boolean","setErr","setLoading","setData","a","axios","get","response","useEffect","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oLAAMA,EAAe,CACnBC,KAAM,CACN,CACE,QAAW,KACX,KAAQ,4BACR,IAAO,WACP,IAAO,WAET,CACE,QAAW,KACX,KAAQ,iBACR,IAAO,WACP,IAAO,WAET,CACE,QAAW,KACX,KAAQ,SACR,IAAO,WACP,IAAO,WAET,CACE,QAAW,KACX,KAAQ,eACR,IAAO,WACP,IAAO,YAKTC,KAAK,GACLC,WAAW,IAUEC,EARK,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,YACH,OAAO,2BAAKF,GAAUC,EAAOE,SAC/B,QACE,OAAOH,IChCEI,EAHKC,YAAgB,CAClCT,KAAMG,ICGOO,EAJDC,YACZH,EACAI,OAAOC,8BAAgCD,OAAOC,gC,yFCFxCC,E,OAAWC,EAAXD,OAgBOE,EAdA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC5B,OACE,qBAAKC,UAAU,sCAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,cAACL,EAAD,CACEM,YAAY,oBACZC,SAAU,SAACC,GAAD,OAAOL,EAAWK,EAAEC,OAAOC,QACrCC,SAAU,kBAAMP,Y,QCoFXQ,EArFD,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC/B,OACE,qBAAKV,UAAU,yCAAf,SACGQ,EACC,6CACEC,EACF,wCACEC,EACF,sBAAKV,UAAU,gCAAf,UACE,qBAAKA,UAAU,wBAAf,SAAwCU,EAAKC,SAAS7B,OACtD,sBAAKkB,UAAU,0BAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,qBAAKA,UAAU,kBAAf,SAAkCY,MAASC,OAAO,UAClD,sBAAKb,UAAU,oCAAf,UACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAAYA,UAAU,qBACtB,gCAAMU,EAAKI,QAAQC,SAAnB,QACA,cAAC,IAAD,CAAaf,UAAU,qBAAmB,IAC1C,gCAAMU,EAAKI,QAAQE,UAAnB,YAEF,sBAAKhB,UAAU,SAAf,UACE,cAAC,IAAD,CAAcA,UAAU,SAAU,IAClC,gCAAMU,EAAKI,QAAQG,SAAnB,cAEF,sBAAKjB,UAAU,SAAf,UACE,cAAC,IAAD,CAAWA,UAAU,SAAU,IAC/B,8BAAMU,EAAKI,QAAQI,cAErB,sBAAKlB,UAAU,SAAf,UACE,cAAC,IAAD,CAAaA,UAAU,SACvB,gCAAMU,EAAKI,QAAQK,YAAnB,kBAIN,sBAAKnB,UAAU,2BAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKoB,IAAKV,EAAKI,QAAQO,UAAUC,KAAMC,IAAI,YAE7C,sBAAKvB,UAAU,oCAAf,UACE,sBAAKA,UAAU,cAAf,UACGU,EAAKI,QAAQU,OAAS,EAAtB,YACQd,EAAKI,QAAQU,QACM,IAAxBd,EAAKI,QAAQU,OAAb,UACGd,EAAKI,QAAQU,OADhB,mBAEId,EAAKI,QAAQU,OAFjB,QAGJ,cAAC,IAAD,CAAWxB,UAAU,cAEvB,qBAAKA,UAAU,mBAAf,SACGU,EAAKI,QAAQO,UAAUI,gBAKhC,qBAAKzB,UAAU,6BAAf,SACGU,EAAKgB,SAASC,YAAYC,KAAI,SAACF,EAAUG,GAAX,OAC7B,sBAAKC,MAAOD,EAAG7B,UAAU,+BAAzB,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKoB,IAAKM,EAASK,IAAIV,UAAUC,KAAMC,IAAI,YAE7C,qBAAKvB,UAAU,SAAf,SACE,qBAAKA,UAAU,2BAAf,SACGY,IAAOc,EAASM,MAAMnB,OAAO,YAGlC,qBAAKb,UAAU,SAAf,SACE,sBAAKA,UAAU,uBAAf,UACG0B,EAASK,IAAIE,UAAY,EAAzB,YACQC,KAAKC,MAAMT,EAASK,IAAIE,YACF,IAA3BP,EAASK,IAAIE,UAAb,UACGC,KAAKC,MAAMT,EAASK,IAAIE,WAD3B,mBAEIC,KAAKC,MAAMT,EAASK,IAAIE,WAF5B,QAGJ,cAAC,IAAD,CAAWjC,UAAU,2BAQjC,6CC5COoC,EAxCC,WAAO,IAAD,EACIC,mBAAS,WADb,mBACbxD,EADa,KACPyD,EADO,OAEID,mBAASE,SAFb,mBAEb9B,EAFa,KAEN+B,EAFM,OAGUH,mBAASE,SAHnB,mBAGb/B,EAHa,KAGJiC,EAHI,OAIIJ,mBAAS,MAJb,mBAIb3B,EAJa,KAIPgC,EAJO,KAUd3C,EAAU,uCAAG,4BAAA4C,EAAA,6DACjBH,GAAO,GACPC,GAAW,GAFM,SAIE,8CACL,kCALG,SAMQG,IAAMC,IAAN,UAFN,8CAEM,gBADX,kCACW,cACOhE,EADP,oBANR,OAMTiE,EANS,OASfL,GAAW,GACXC,EAAQI,EAASpC,MAVF,kDAYf8B,EAAO,SACPC,GAAW,GACXC,EAAQ,MAdO,0DAAH,qDAqBhB,OAJAK,qBAAU,WACRhD,MACC,IACHiD,QAAQC,IAAIvC,GAEV,sBAAKV,UAAU,0BAAf,UACE,cAAC,EAAD,CAAQF,WA3BO,SAAC2B,GAClBa,EAAQb,IA0B0B1B,WAAYA,IAC5C,cAAC,EAAD,CAAOS,QAASA,EAASC,MAAOA,EAAOC,KAAMA,IAC7C,qBAAKV,UAAU,eAAf,SAA+BY,MAASC,OAAO,cC5BtCqC,MARf,WACE,OACE,qBAAKlD,UAAU,oBAAf,SACE,cAAC,EAAD,OCKSmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAD,CAAUtE,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFuE,SAASC,eAAe,SAE1BZ,K","file":"static/js/main.58b9fda0.chunk.js","sourcesContent":["const initialState = {\r\n  city: [\r\n  {\r\n    \"country\": \"AD\",\r\n    \"name\": \"Sant Julià de Lòria\",\r\n    \"lat\": \"42.46372\",\r\n    \"lng\": \"1.49129\"\r\n  },\r\n  {\r\n    \"country\": \"AD\",\r\n    \"name\": \"Pas de la Casa\",\r\n    \"lat\": \"42.54277\",\r\n    \"lng\": \"1.73361\"\r\n  },\r\n  {\r\n    \"country\": \"AD\",\r\n    \"name\": \"Ordino\",\r\n    \"lat\": \"42.55623\",\r\n    \"lng\": \"1.53319\"\r\n  },\r\n  {\r\n    \"country\": \"AD\",\r\n    \"name\": \"les Escaldes\",\r\n    \"lat\": \"42.50729\",\r\n    \"lng\": \"1.53414\"\r\n  },\r\n  \r\n  \r\n],\r\n  name:\"\",\r\n  coordonate:[],\r\n};\r\nconst cityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_STATE\":\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default cityReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cityReducer from \"./city\";\r\nconst rootReducer = combineReducers({\r\n  city: cityReducer,\r\n});\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nconst { Search } = Input;\r\n\r\nconst Navbar = ({ updateCity, getWeather }) => {\r\n  return (\r\n    <div className=\"center column maxW search-container\">\r\n      <div className=\"center search-bar\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onChange={(e) => updateCity(e.target.value)}\r\n          onSearch={() => getWeather()}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  WiCelsius,\r\n  WiRaindrops,\r\n  WiRaindrop,\r\n  WiStrongWind,\r\n  WiWindDeg,\r\n  WiBarometer,\r\n} from \"react-icons/wi\";\r\nconst Cards = ({ loading, error, data }) => {\r\n  return (\r\n    <div className=\"center column maxW maxH card-container\">\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>ERROR</div>\r\n      ) : data ? (\r\n        <div className=\"center column details-weather\">\r\n          <div className=\"center maxW city-name\">{data.location.name}</div>\r\n          <div className=\"center maxW weather-top\">\r\n            <div className=\"center column weather-top-left\">\r\n              <div className=\"center maxW day\">{moment().format(\"dddd\")}</div>\r\n              <div className=\"center maxW column weather-detail\">\r\n                <div className=\"center\">\r\n                  <WiRaindrop className=\"détails-icons\" />\r\n                  <div>{data.current.humidity} %</div>\r\n                  <WiRaindrops className=\"détails-icons\" />{\" \"}\r\n                  <div>{data.current.precip_mm} Mm</div>\r\n                </div>\r\n                <div className=\"center\">\r\n                  <WiStrongWind className=\"wind\" />{\" \"}\r\n                  <div>{data.current.wind_kph} Km/h</div>\r\n                </div>\r\n                <div className=\"center\">\r\n                  <WiWindDeg className=\"wind\" />{\" \"}\r\n                  <div>{data.current.wind_dir}</div>\r\n                </div>\r\n                <div className=\"center\">\r\n                  <WiBarometer className=\"wind\" />\r\n                  <div>{data.current.pressure_mb} Mb</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"center weather-top-right\">\r\n              <div className=\"center column img\">\r\n                <img src={data.current.condition.icon} alt=\"icone\"></img>\r\n              </div>\r\n              <div className=\"center column condition-container\">\r\n                <div className=\"center temp\">\r\n                  {data.current.temp_c > 0\r\n                    ? `+ ${data.current.temp_c}`\r\n                    : data.current.temp_c === 0\r\n                    ? `${data.current.temp_c}°`\r\n                    : ` ${data.current.temp_c}°`}\r\n                  <WiCelsius className=\"celsus\" />\r\n                </div>\r\n                <div className=\"center condition\">\r\n                  {data.current.condition.text}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"center maxW weather-bottom\">\r\n            {data.forecast.forecastday.map((forecast, i) => (\r\n              <div index={i} className=\"center column forecast-items\">\r\n                <div className=\"center forecase-img\">\r\n                  <img src={forecast.day.condition.icon} alt=\"icone\"></img>\r\n                </div>\r\n                <div className=\"center\">\r\n                  <div className=\"center maxW forecast-day\">\r\n                    {moment(forecast.date).format(\"dddd\")}\r\n                  </div>\r\n                </div>\r\n                <div className=\"center\">\r\n                  <div className=\"center forecast-temp\">\r\n                    {forecast.day.maxtemp_c > 0\r\n                      ? `+ ${Math.round(forecast.day.maxtemp_c)}`\r\n                      : forecast.day.maxtemp_c === 0\r\n                      ? `${Math.round(forecast.day.maxtemp_c)}°`\r\n                      : ` ${Math.round(forecast.day.maxtemp_c)}°`}\r\n                    <WiCelsius className=\"celsus\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>no data</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Navbar from \"../../navBar\";\r\nimport Cards from \"../../card\";\r\nconst Content = () => {\r\n  const [city, setCity] = useState(\"algiers\");\r\n  const [error, setErr] = useState(Boolean);\r\n  const [loading, setLoading] = useState(Boolean);\r\n  const [data, setData] = useState(null);\r\n\r\n  const updateCity = (text) => {\r\n    setCity(text);\r\n  };\r\n\r\n  const getWeather = async () => {\r\n    setErr(false);\r\n    setLoading(true);\r\n    try {\r\n      const EndPoint = \"https://api.weatherapi.com/v1/forecast.json\";\r\n      const key = \"cb29ec2d3c3e49559e7153521202212\";\r\n      const response = await axios.get(\r\n        `${EndPoint}?key=${key}&q=${city}&days=3&lang=fr`\r\n      );\r\n      setLoading(false);\r\n      setData(response.data);\r\n    } catch (err) {\r\n      setErr(\"error\");\r\n      setLoading(false);\r\n      setData(null);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getWeather();\r\n  }, []);\r\n  console.log(data);\r\n  return (\r\n    <div className=\"center column maxW maxH\">\r\n      <Navbar updateCity={updateCity} getWeather={getWeather} />\r\n      <Cards loading={loading} error={error} data={data} />\r\n      <div className=\"center today\">{moment().format(\"LLLL\")}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport Content from \"./components/content/weatherCard\";\n\nfunction App() {\n  return (\n    <div className=\"App center column\">\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from \"./redux/store\"\nimport {Provider} from \"react-redux\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}